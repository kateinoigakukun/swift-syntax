

//// Automatically Generated by generate-swiftsyntax
//// Do Not Edit Directly!
//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2014 - 2022 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://swift.org/LICENSE.txt for license information
// See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
//===----------------------------------------------------------------------===//


extension Syntax {
  public static var structure: SyntaxNodeStructure {
    return .choices([
        .node(TokenSyntax.self), 
        .node(AccessPathComponentSyntax.self), 
        .node(AccessPathSyntax.self), 
        .node(AccessorBlockSyntax.self), 
        .node(AccessorDeclSyntax.self), 
        .node(AccessorListSyntax.self), 
        .node(AccessorParameterSyntax.self), 
        .node(ActorDeclSyntax.self), 
        .node(ArrayElementListSyntax.self), 
        .node(ArrayElementSyntax.self), 
        .node(ArrayExprSyntax.self), 
        .node(ArrayTypeSyntax.self), 
        .node(ArrowExprSyntax.self), 
        .node(AsExprSyntax.self), 
        .node(AssignmentExprSyntax.self), 
        .node(AssociatedtypeDeclSyntax.self), 
        .node(AttributeListSyntax.self), 
        .node(AttributeSyntax.self), 
        .node(AttributedTypeSyntax.self), 
        .node(AvailabilityArgumentSyntax.self), 
        .node(AvailabilityConditionSyntax.self), 
        .node(AvailabilityEntrySyntax.self), 
        .node(AvailabilityLabeledArgumentSyntax.self), 
        .node(AvailabilitySpecListSyntax.self), 
        .node(AvailabilityVersionRestrictionListEntrySyntax.self), 
        .node(AvailabilityVersionRestrictionListSyntax.self), 
        .node(AvailabilityVersionRestrictionSyntax.self), 
        .node(AwaitExprSyntax.self), 
        .node(BackDeployAttributeSpecListSyntax.self), 
        .node(BinaryOperatorExprSyntax.self), 
        .node(BooleanLiteralExprSyntax.self), 
        .node(BorrowExprSyntax.self), 
        .node(BreakStmtSyntax.self), 
        .node(CaseItemListSyntax.self), 
        .node(CaseItemSyntax.self), 
        .node(CatchClauseListSyntax.self), 
        .node(CatchClauseSyntax.self), 
        .node(CatchItemListSyntax.self), 
        .node(CatchItemSyntax.self), 
        .node(ClassDeclSyntax.self), 
        .node(ClassRestrictionTypeSyntax.self), 
        .node(ClosureCaptureItemListSyntax.self), 
        .node(ClosureCaptureItemSpecifierSyntax.self), 
        .node(ClosureCaptureItemSyntax.self), 
        .node(ClosureCaptureSignatureSyntax.self), 
        .node(ClosureExprSyntax.self), 
        .node(ClosureParamListSyntax.self), 
        .node(ClosureParamSyntax.self), 
        .node(ClosureSignatureSyntax.self), 
        .node(CodeBlockItemListSyntax.self), 
        .node(CodeBlockItemSyntax.self), 
        .node(CodeBlockSyntax.self), 
        .node(CompositionTypeElementListSyntax.self), 
        .node(CompositionTypeElementSyntax.self), 
        .node(CompositionTypeSyntax.self), 
        .node(ConditionElementListSyntax.self), 
        .node(ConditionElementSyntax.self), 
        .node(ConformanceRequirementSyntax.self), 
        .node(ConstrainedSugarTypeSyntax.self), 
        .node(ContinueStmtSyntax.self), 
        .node(ConventionAttributeArgumentsSyntax.self), 
        .node(ConventionWitnessMethodAttributeArgumentsSyntax.self), 
        .node(DeclModifierDetailSyntax.self), 
        .node(DeclModifierSyntax.self), 
        .node(DeclNameArgumentListSyntax.self), 
        .node(DeclNameArgumentSyntax.self), 
        .node(DeclNameArgumentsSyntax.self), 
        .node(DeclNameSyntax.self), 
        .node(DeferStmtSyntax.self), 
        .node(DeinitializerDeclSyntax.self), 
        .node(DerivativeRegistrationAttributeArgumentsSyntax.self), 
        .node(DesignatedTypeElementSyntax.self), 
        .node(DesignatedTypeListSyntax.self), 
        .node(DictionaryElementListSyntax.self), 
        .node(DictionaryElementSyntax.self), 
        .node(DictionaryExprSyntax.self), 
        .node(DictionaryTypeSyntax.self), 
        .node(DifferentiabilityParamListSyntax.self), 
        .node(DifferentiabilityParamSyntax.self), 
        .node(DifferentiabilityParamsClauseSyntax.self), 
        .node(DifferentiabilityParamsSyntax.self), 
        .node(DifferentiableAttributeArgumentsSyntax.self), 
        .node(DiscardAssignmentExprSyntax.self), 
        .node(DoStmtSyntax.self), 
        .node(DocumentationAttributeArgumentSyntax.self), 
        .node(DocumentationAttributeArgumentsSyntax.self), 
        .node(DynamicReplacementArgumentsSyntax.self), 
        .node(EditorPlaceholderDeclSyntax.self), 
        .node(EditorPlaceholderExprSyntax.self), 
        .node(EffectsArgumentsSyntax.self), 
        .node(EnumCaseDeclSyntax.self), 
        .node(EnumCaseElementListSyntax.self), 
        .node(EnumCaseElementSyntax.self), 
        .node(EnumDeclSyntax.self), 
        .node(ExposeAttributeArgumentsSyntax.self), 
        .node(ExprListSyntax.self), 
        .node(ExpressionPatternSyntax.self), 
        .node(ExpressionSegmentSyntax.self), 
        .node(ExtensionDeclSyntax.self), 
        .node(FallthroughStmtSyntax.self), 
        .node(FloatLiteralExprSyntax.self), 
        .node(ForInStmtSyntax.self), 
        .node(ForcedValueExprSyntax.self), 
        .node(FunctionCallExprSyntax.self), 
        .node(FunctionDeclSyntax.self), 
        .node(FunctionParameterListSyntax.self), 
        .node(FunctionParameterSyntax.self), 
        .node(FunctionSignatureSyntax.self), 
        .node(FunctionTypeSyntax.self), 
        .node(GenericArgumentClauseSyntax.self), 
        .node(GenericArgumentListSyntax.self), 
        .node(GenericArgumentSyntax.self), 
        .node(GenericParameterClauseSyntax.self), 
        .node(GenericParameterListSyntax.self), 
        .node(GenericParameterSyntax.self), 
        .node(GenericRequirementListSyntax.self), 
        .node(GenericRequirementSyntax.self), 
        .node(GenericWhereClauseSyntax.self), 
        .node(GuardStmtSyntax.self), 
        .node(HasSymbolConditionSyntax.self), 
        .node(IdentifierExprSyntax.self), 
        .node(IdentifierPatternSyntax.self), 
        .node(IfConfigClauseListSyntax.self), 
        .node(IfConfigClauseSyntax.self), 
        .node(IfConfigDeclSyntax.self), 
        .node(IfStmtSyntax.self), 
        .node(ImplementsAttributeArgumentsSyntax.self), 
        .node(ImplicitlyUnwrappedOptionalTypeSyntax.self), 
        .node(ImportDeclSyntax.self), 
        .node(InOutExprSyntax.self), 
        .node(InfixOperatorExprSyntax.self), 
        .node(InheritedTypeListSyntax.self), 
        .node(InheritedTypeSyntax.self), 
        .node(InitializerClauseSyntax.self), 
        .node(InitializerDeclSyntax.self), 
        .node(IntegerLiteralExprSyntax.self), 
        .node(IsExprSyntax.self), 
        .node(IsTypePatternSyntax.self), 
        .node(KeyPathComponentListSyntax.self), 
        .node(KeyPathComponentSyntax.self), 
        .node(KeyPathExprSyntax.self), 
        .node(KeyPathOptionalComponentSyntax.self), 
        .node(KeyPathPropertyComponentSyntax.self), 
        .node(KeyPathSubscriptComponentSyntax.self), 
        .node(LabeledSpecializeEntrySyntax.self), 
        .node(LabeledStmtSyntax.self), 
        .node(LayoutRequirementSyntax.self), 
        .node(MacroDeclSyntax.self), 
        .node(MacroExpansionDeclSyntax.self), 
        .node(MacroExpansionExprSyntax.self), 
        .node(MatchingPatternConditionSyntax.self), 
        .node(MemberAccessExprSyntax.self), 
        .node(MemberDeclBlockSyntax.self), 
        .node(MemberDeclListItemSyntax.self), 
        .node(MemberDeclListSyntax.self), 
        .node(MemberTypeIdentifierSyntax.self), 
        .node(MetatypeTypeSyntax.self), 
        .node(MissingDeclSyntax.self), 
        .node(MissingExprSyntax.self), 
        .node(MissingPatternSyntax.self), 
        .node(MissingStmtSyntax.self), 
        .node(MissingSyntax.self), 
        .node(MissingTypeSyntax.self), 
        .node(ModifierListSyntax.self), 
        .node(MoveExprSyntax.self), 
        .node(MultipleTrailingClosureElementListSyntax.self), 
        .node(MultipleTrailingClosureElementSyntax.self), 
        .node(NamedOpaqueReturnTypeSyntax.self), 
        .node(NilLiteralExprSyntax.self), 
        .node(ObjCSelectorPieceSyntax.self), 
        .node(ObjCSelectorSyntax.self), 
        .node(OpaqueReturnTypeOfAttributeArgumentsSyntax.self), 
        .node(OperatorDeclSyntax.self), 
        .node(OperatorPrecedenceAndTypesSyntax.self), 
        .node(OptionalBindingConditionSyntax.self), 
        .node(OptionalChainingExprSyntax.self), 
        .node(OptionalTypeSyntax.self), 
        .node(OriginallyDefinedInArgumentsSyntax.self), 
        .node(PackElementExprSyntax.self), 
        .node(PackExpansionExprSyntax.self), 
        .node(PackExpansionTypeSyntax.self), 
        .node(PackReferenceTypeSyntax.self), 
        .node(ParameterClauseSyntax.self), 
        .node(PatternBindingListSyntax.self), 
        .node(PatternBindingSyntax.self), 
        .node(PostfixIfConfigExprSyntax.self), 
        .node(PostfixUnaryExprSyntax.self), 
        .node(PoundAssertStmtSyntax.self), 
        .node(PoundErrorDeclSyntax.self), 
        .node(PoundSourceLocationArgsSyntax.self), 
        .node(PoundSourceLocationSyntax.self), 
        .node(PoundWarningDeclSyntax.self), 
        .node(PrecedenceGroupAssignmentSyntax.self), 
        .node(PrecedenceGroupAssociativitySyntax.self), 
        .node(PrecedenceGroupAttributeListSyntax.self), 
        .node(PrecedenceGroupDeclSyntax.self), 
        .node(PrecedenceGroupNameElementSyntax.self), 
        .node(PrecedenceGroupNameListSyntax.self), 
        .node(PrecedenceGroupRelationSyntax.self), 
        .node(PrefixOperatorExprSyntax.self), 
        .node(PrimaryAssociatedTypeClauseSyntax.self), 
        .node(PrimaryAssociatedTypeListSyntax.self), 
        .node(PrimaryAssociatedTypeSyntax.self), 
        .node(ProtocolDeclSyntax.self), 
        .node(QualifiedDeclNameSyntax.self), 
        .node(RegexLiteralExprSyntax.self), 
        .node(RepeatWhileStmtSyntax.self), 
        .node(ReturnClauseSyntax.self), 
        .node(ReturnStmtSyntax.self), 
        .node(SameTypeRequirementSyntax.self), 
        .node(SequenceExprSyntax.self), 
        .node(SimpleTypeIdentifierSyntax.self), 
        .node(SourceFileSyntax.self), 
        .node(SpecializeAttributeSpecListSyntax.self), 
        .node(SpecializeExprSyntax.self), 
        .node(StringLiteralExprSyntax.self), 
        .node(StringLiteralSegmentsSyntax.self), 
        .node(StringSegmentSyntax.self), 
        .node(StructDeclSyntax.self), 
        .node(SubscriptDeclSyntax.self), 
        .node(SubscriptExprSyntax.self), 
        .node(SuperRefExprSyntax.self), 
        .node(SwitchCaseLabelSyntax.self), 
        .node(SwitchCaseListSyntax.self), 
        .node(SwitchCaseSyntax.self), 
        .node(SwitchDefaultLabelSyntax.self), 
        .node(SwitchStmtSyntax.self), 
        .node(TargetFunctionEntrySyntax.self), 
        .node(TernaryExprSyntax.self), 
        .node(ThrowStmtSyntax.self), 
        .node(TryExprSyntax.self), 
        .node(TupleExprElementListSyntax.self), 
        .node(TupleExprElementSyntax.self), 
        .node(TupleExprSyntax.self), 
        .node(TuplePatternElementListSyntax.self), 
        .node(TuplePatternElementSyntax.self), 
        .node(TuplePatternSyntax.self), 
        .node(TupleTypeElementListSyntax.self), 
        .node(TupleTypeElementSyntax.self), 
        .node(TupleTypeSyntax.self), 
        .node(TypeAnnotationSyntax.self), 
        .node(TypeExprSyntax.self), 
        .node(TypeInheritanceClauseSyntax.self), 
        .node(TypeInitializerClauseSyntax.self), 
        .node(TypealiasDeclSyntax.self), 
        .node(UnavailableFromAsyncArgumentsSyntax.self), 
        .node(UnderscorePrivateAttributeArgumentsSyntax.self), 
        .node(UnexpectedNodesSyntax.self), 
        .node(UnresolvedAsExprSyntax.self), 
        .node(UnresolvedIsExprSyntax.self), 
        .node(UnresolvedPatternExprSyntax.self), 
        .node(UnresolvedTernaryExprSyntax.self), 
        .node(ValueBindingPatternSyntax.self), 
        .node(VariableDeclSyntax.self), 
        .node(VersionTupleSyntax.self), 
        .node(WhereClauseSyntax.self), 
        .node(WhileStmtSyntax.self), 
        .node(WildcardPatternSyntax.self), 
        .node(YieldExprListElementSyntax.self), 
        .node(YieldExprListSyntax.self), 
        .node(YieldListSyntax.self), 
        .node(YieldStmtSyntax.self)])
  }
}

extension SyntaxKind {
  public var syntaxNodeType: SyntaxProtocol.Type {
    switch self {
    case .token: 
      return TokenSyntax.self
    case .accessPathComponent: 
      return AccessPathComponentSyntax.self
    case .accessPath: 
      return AccessPathSyntax.self
    case .accessorBlock: 
      return AccessorBlockSyntax.self
    case .accessorDecl: 
      return AccessorDeclSyntax.self
    case .accessorList: 
      return AccessorListSyntax.self
    case .accessorParameter: 
      return AccessorParameterSyntax.self
    case .actorDecl: 
      return ActorDeclSyntax.self
    case .arrayElementList: 
      return ArrayElementListSyntax.self
    case .arrayElement: 
      return ArrayElementSyntax.self
    case .arrayExpr: 
      return ArrayExprSyntax.self
    case .arrayType: 
      return ArrayTypeSyntax.self
    case .arrowExpr: 
      return ArrowExprSyntax.self
    case .asExpr: 
      return AsExprSyntax.self
    case .assignmentExpr: 
      return AssignmentExprSyntax.self
    case .associatedtypeDecl: 
      return AssociatedtypeDeclSyntax.self
    case .attributeList: 
      return AttributeListSyntax.self
    case .attribute: 
      return AttributeSyntax.self
    case .attributedType: 
      return AttributedTypeSyntax.self
    case .availabilityArgument: 
      return AvailabilityArgumentSyntax.self
    case .availabilityCondition: 
      return AvailabilityConditionSyntax.self
    case .availabilityEntry: 
      return AvailabilityEntrySyntax.self
    case .availabilityLabeledArgument: 
      return AvailabilityLabeledArgumentSyntax.self
    case .availabilitySpecList: 
      return AvailabilitySpecListSyntax.self
    case .availabilityVersionRestrictionListEntry: 
      return AvailabilityVersionRestrictionListEntrySyntax.self
    case .availabilityVersionRestrictionList: 
      return AvailabilityVersionRestrictionListSyntax.self
    case .availabilityVersionRestriction: 
      return AvailabilityVersionRestrictionSyntax.self
    case .awaitExpr: 
      return AwaitExprSyntax.self
    case .backDeployAttributeSpecList: 
      return BackDeployAttributeSpecListSyntax.self
    case .binaryOperatorExpr: 
      return BinaryOperatorExprSyntax.self
    case .booleanLiteralExpr: 
      return BooleanLiteralExprSyntax.self
    case .borrowExpr: 
      return BorrowExprSyntax.self
    case .breakStmt: 
      return BreakStmtSyntax.self
    case .caseItemList: 
      return CaseItemListSyntax.self
    case .caseItem: 
      return CaseItemSyntax.self
    case .catchClauseList: 
      return CatchClauseListSyntax.self
    case .catchClause: 
      return CatchClauseSyntax.self
    case .catchItemList: 
      return CatchItemListSyntax.self
    case .catchItem: 
      return CatchItemSyntax.self
    case .classDecl: 
      return ClassDeclSyntax.self
    case .classRestrictionType: 
      return ClassRestrictionTypeSyntax.self
    case .closureCaptureItemList: 
      return ClosureCaptureItemListSyntax.self
    case .closureCaptureItemSpecifier: 
      return ClosureCaptureItemSpecifierSyntax.self
    case .closureCaptureItem: 
      return ClosureCaptureItemSyntax.self
    case .closureCaptureSignature: 
      return ClosureCaptureSignatureSyntax.self
    case .closureExpr: 
      return ClosureExprSyntax.self
    case .closureParamList: 
      return ClosureParamListSyntax.self
    case .closureParam: 
      return ClosureParamSyntax.self
    case .closureSignature: 
      return ClosureSignatureSyntax.self
    case .codeBlockItemList: 
      return CodeBlockItemListSyntax.self
    case .codeBlockItem: 
      return CodeBlockItemSyntax.self
    case .codeBlock: 
      return CodeBlockSyntax.self
    case .compositionTypeElementList: 
      return CompositionTypeElementListSyntax.self
    case .compositionTypeElement: 
      return CompositionTypeElementSyntax.self
    case .compositionType: 
      return CompositionTypeSyntax.self
    case .conditionElementList: 
      return ConditionElementListSyntax.self
    case .conditionElement: 
      return ConditionElementSyntax.self
    case .conformanceRequirement: 
      return ConformanceRequirementSyntax.self
    case .constrainedSugarType: 
      return ConstrainedSugarTypeSyntax.self
    case .continueStmt: 
      return ContinueStmtSyntax.self
    case .conventionAttributeArguments: 
      return ConventionAttributeArgumentsSyntax.self
    case .conventionWitnessMethodAttributeArguments: 
      return ConventionWitnessMethodAttributeArgumentsSyntax.self
    case .declModifierDetail: 
      return DeclModifierDetailSyntax.self
    case .declModifier: 
      return DeclModifierSyntax.self
    case .declNameArgumentList: 
      return DeclNameArgumentListSyntax.self
    case .declNameArgument: 
      return DeclNameArgumentSyntax.self
    case .declNameArguments: 
      return DeclNameArgumentsSyntax.self
    case .declName: 
      return DeclNameSyntax.self
    case .deferStmt: 
      return DeferStmtSyntax.self
    case .deinitializerDecl: 
      return DeinitializerDeclSyntax.self
    case .derivativeRegistrationAttributeArguments: 
      return DerivativeRegistrationAttributeArgumentsSyntax.self
    case .designatedTypeElement: 
      return DesignatedTypeElementSyntax.self
    case .designatedTypeList: 
      return DesignatedTypeListSyntax.self
    case .dictionaryElementList: 
      return DictionaryElementListSyntax.self
    case .dictionaryElement: 
      return DictionaryElementSyntax.self
    case .dictionaryExpr: 
      return DictionaryExprSyntax.self
    case .dictionaryType: 
      return DictionaryTypeSyntax.self
    case .differentiabilityParamList: 
      return DifferentiabilityParamListSyntax.self
    case .differentiabilityParam: 
      return DifferentiabilityParamSyntax.self
    case .differentiabilityParamsClause: 
      return DifferentiabilityParamsClauseSyntax.self
    case .differentiabilityParams: 
      return DifferentiabilityParamsSyntax.self
    case .differentiableAttributeArguments: 
      return DifferentiableAttributeArgumentsSyntax.self
    case .discardAssignmentExpr: 
      return DiscardAssignmentExprSyntax.self
    case .doStmt: 
      return DoStmtSyntax.self
    case .documentationAttributeArgument: 
      return DocumentationAttributeArgumentSyntax.self
    case .documentationAttributeArguments: 
      return DocumentationAttributeArgumentsSyntax.self
    case .dynamicReplacementArguments: 
      return DynamicReplacementArgumentsSyntax.self
    case .editorPlaceholderDecl: 
      return EditorPlaceholderDeclSyntax.self
    case .editorPlaceholderExpr: 
      return EditorPlaceholderExprSyntax.self
    case .effectsArguments: 
      return EffectsArgumentsSyntax.self
    case .enumCaseDecl: 
      return EnumCaseDeclSyntax.self
    case .enumCaseElementList: 
      return EnumCaseElementListSyntax.self
    case .enumCaseElement: 
      return EnumCaseElementSyntax.self
    case .enumDecl: 
      return EnumDeclSyntax.self
    case .exposeAttributeArguments: 
      return ExposeAttributeArgumentsSyntax.self
    case .exprList: 
      return ExprListSyntax.self
    case .expressionPattern: 
      return ExpressionPatternSyntax.self
    case .expressionSegment: 
      return ExpressionSegmentSyntax.self
    case .extensionDecl: 
      return ExtensionDeclSyntax.self
    case .fallthroughStmt: 
      return FallthroughStmtSyntax.self
    case .floatLiteralExpr: 
      return FloatLiteralExprSyntax.self
    case .forInStmt: 
      return ForInStmtSyntax.self
    case .forcedValueExpr: 
      return ForcedValueExprSyntax.self
    case .functionCallExpr: 
      return FunctionCallExprSyntax.self
    case .functionDecl: 
      return FunctionDeclSyntax.self
    case .functionParameterList: 
      return FunctionParameterListSyntax.self
    case .functionParameter: 
      return FunctionParameterSyntax.self
    case .functionSignature: 
      return FunctionSignatureSyntax.self
    case .functionType: 
      return FunctionTypeSyntax.self
    case .genericArgumentClause: 
      return GenericArgumentClauseSyntax.self
    case .genericArgumentList: 
      return GenericArgumentListSyntax.self
    case .genericArgument: 
      return GenericArgumentSyntax.self
    case .genericParameterClause: 
      return GenericParameterClauseSyntax.self
    case .genericParameterList: 
      return GenericParameterListSyntax.self
    case .genericParameter: 
      return GenericParameterSyntax.self
    case .genericRequirementList: 
      return GenericRequirementListSyntax.self
    case .genericRequirement: 
      return GenericRequirementSyntax.self
    case .genericWhereClause: 
      return GenericWhereClauseSyntax.self
    case .guardStmt: 
      return GuardStmtSyntax.self
    case .hasSymbolCondition: 
      return HasSymbolConditionSyntax.self
    case .identifierExpr: 
      return IdentifierExprSyntax.self
    case .identifierPattern: 
      return IdentifierPatternSyntax.self
    case .ifConfigClauseList: 
      return IfConfigClauseListSyntax.self
    case .ifConfigClause: 
      return IfConfigClauseSyntax.self
    case .ifConfigDecl: 
      return IfConfigDeclSyntax.self
    case .ifStmt: 
      return IfStmtSyntax.self
    case .implementsAttributeArguments: 
      return ImplementsAttributeArgumentsSyntax.self
    case .implicitlyUnwrappedOptionalType: 
      return ImplicitlyUnwrappedOptionalTypeSyntax.self
    case .importDecl: 
      return ImportDeclSyntax.self
    case .inOutExpr: 
      return InOutExprSyntax.self
    case .infixOperatorExpr: 
      return InfixOperatorExprSyntax.self
    case .inheritedTypeList: 
      return InheritedTypeListSyntax.self
    case .inheritedType: 
      return InheritedTypeSyntax.self
    case .initializerClause: 
      return InitializerClauseSyntax.self
    case .initializerDecl: 
      return InitializerDeclSyntax.self
    case .integerLiteralExpr: 
      return IntegerLiteralExprSyntax.self
    case .isExpr: 
      return IsExprSyntax.self
    case .isTypePattern: 
      return IsTypePatternSyntax.self
    case .keyPathComponentList: 
      return KeyPathComponentListSyntax.self
    case .keyPathComponent: 
      return KeyPathComponentSyntax.self
    case .keyPathExpr: 
      return KeyPathExprSyntax.self
    case .keyPathOptionalComponent: 
      return KeyPathOptionalComponentSyntax.self
    case .keyPathPropertyComponent: 
      return KeyPathPropertyComponentSyntax.self
    case .keyPathSubscriptComponent: 
      return KeyPathSubscriptComponentSyntax.self
    case .labeledSpecializeEntry: 
      return LabeledSpecializeEntrySyntax.self
    case .labeledStmt: 
      return LabeledStmtSyntax.self
    case .layoutRequirement: 
      return LayoutRequirementSyntax.self
    case .macroDecl: 
      return MacroDeclSyntax.self
    case .macroExpansionDecl: 
      return MacroExpansionDeclSyntax.self
    case .macroExpansionExpr: 
      return MacroExpansionExprSyntax.self
    case .matchingPatternCondition: 
      return MatchingPatternConditionSyntax.self
    case .memberAccessExpr: 
      return MemberAccessExprSyntax.self
    case .memberDeclBlock: 
      return MemberDeclBlockSyntax.self
    case .memberDeclListItem: 
      return MemberDeclListItemSyntax.self
    case .memberDeclList: 
      return MemberDeclListSyntax.self
    case .memberTypeIdentifier: 
      return MemberTypeIdentifierSyntax.self
    case .metatypeType: 
      return MetatypeTypeSyntax.self
    case .missingDecl: 
      return MissingDeclSyntax.self
    case .missingExpr: 
      return MissingExprSyntax.self
    case .missingPattern: 
      return MissingPatternSyntax.self
    case .missingStmt: 
      return MissingStmtSyntax.self
    case .missing: 
      return MissingSyntax.self
    case .missingType: 
      return MissingTypeSyntax.self
    case .modifierList: 
      return ModifierListSyntax.self
    case .moveExpr: 
      return MoveExprSyntax.self
    case .multipleTrailingClosureElementList: 
      return MultipleTrailingClosureElementListSyntax.self
    case .multipleTrailingClosureElement: 
      return MultipleTrailingClosureElementSyntax.self
    case .namedOpaqueReturnType: 
      return NamedOpaqueReturnTypeSyntax.self
    case .nilLiteralExpr: 
      return NilLiteralExprSyntax.self
    case .objCSelectorPiece: 
      return ObjCSelectorPieceSyntax.self
    case .objCSelector: 
      return ObjCSelectorSyntax.self
    case .opaqueReturnTypeOfAttributeArguments: 
      return OpaqueReturnTypeOfAttributeArgumentsSyntax.self
    case .operatorDecl: 
      return OperatorDeclSyntax.self
    case .operatorPrecedenceAndTypes: 
      return OperatorPrecedenceAndTypesSyntax.self
    case .optionalBindingCondition: 
      return OptionalBindingConditionSyntax.self
    case .optionalChainingExpr: 
      return OptionalChainingExprSyntax.self
    case .optionalType: 
      return OptionalTypeSyntax.self
    case .originallyDefinedInArguments: 
      return OriginallyDefinedInArgumentsSyntax.self
    case .packElementExpr: 
      return PackElementExprSyntax.self
    case .packExpansionExpr: 
      return PackExpansionExprSyntax.self
    case .packExpansionType: 
      return PackExpansionTypeSyntax.self
    case .packReferenceType: 
      return PackReferenceTypeSyntax.self
    case .parameterClause: 
      return ParameterClauseSyntax.self
    case .patternBindingList: 
      return PatternBindingListSyntax.self
    case .patternBinding: 
      return PatternBindingSyntax.self
    case .postfixIfConfigExpr: 
      return PostfixIfConfigExprSyntax.self
    case .postfixUnaryExpr: 
      return PostfixUnaryExprSyntax.self
    case .poundAssertStmt: 
      return PoundAssertStmtSyntax.self
    case .poundErrorDecl: 
      return PoundErrorDeclSyntax.self
    case .poundSourceLocationArgs: 
      return PoundSourceLocationArgsSyntax.self
    case .poundSourceLocation: 
      return PoundSourceLocationSyntax.self
    case .poundWarningDecl: 
      return PoundWarningDeclSyntax.self
    case .precedenceGroupAssignment: 
      return PrecedenceGroupAssignmentSyntax.self
    case .precedenceGroupAssociativity: 
      return PrecedenceGroupAssociativitySyntax.self
    case .precedenceGroupAttributeList: 
      return PrecedenceGroupAttributeListSyntax.self
    case .precedenceGroupDecl: 
      return PrecedenceGroupDeclSyntax.self
    case .precedenceGroupNameElement: 
      return PrecedenceGroupNameElementSyntax.self
    case .precedenceGroupNameList: 
      return PrecedenceGroupNameListSyntax.self
    case .precedenceGroupRelation: 
      return PrecedenceGroupRelationSyntax.self
    case .prefixOperatorExpr: 
      return PrefixOperatorExprSyntax.self
    case .primaryAssociatedTypeClause: 
      return PrimaryAssociatedTypeClauseSyntax.self
    case .primaryAssociatedTypeList: 
      return PrimaryAssociatedTypeListSyntax.self
    case .primaryAssociatedType: 
      return PrimaryAssociatedTypeSyntax.self
    case .protocolDecl: 
      return ProtocolDeclSyntax.self
    case .qualifiedDeclName: 
      return QualifiedDeclNameSyntax.self
    case .regexLiteralExpr: 
      return RegexLiteralExprSyntax.self
    case .repeatWhileStmt: 
      return RepeatWhileStmtSyntax.self
    case .returnClause: 
      return ReturnClauseSyntax.self
    case .returnStmt: 
      return ReturnStmtSyntax.self
    case .sameTypeRequirement: 
      return SameTypeRequirementSyntax.self
    case .sequenceExpr: 
      return SequenceExprSyntax.self
    case .simpleTypeIdentifier: 
      return SimpleTypeIdentifierSyntax.self
    case .sourceFile: 
      return SourceFileSyntax.self
    case .specializeAttributeSpecList: 
      return SpecializeAttributeSpecListSyntax.self
    case .specializeExpr: 
      return SpecializeExprSyntax.self
    case .stringLiteralExpr: 
      return StringLiteralExprSyntax.self
    case .stringLiteralSegments: 
      return StringLiteralSegmentsSyntax.self
    case .stringSegment: 
      return StringSegmentSyntax.self
    case .structDecl: 
      return StructDeclSyntax.self
    case .subscriptDecl: 
      return SubscriptDeclSyntax.self
    case .subscriptExpr: 
      return SubscriptExprSyntax.self
    case .superRefExpr: 
      return SuperRefExprSyntax.self
    case .switchCaseLabel: 
      return SwitchCaseLabelSyntax.self
    case .switchCaseList: 
      return SwitchCaseListSyntax.self
    case .switchCase: 
      return SwitchCaseSyntax.self
    case .switchDefaultLabel: 
      return SwitchDefaultLabelSyntax.self
    case .switchStmt: 
      return SwitchStmtSyntax.self
    case .targetFunctionEntry: 
      return TargetFunctionEntrySyntax.self
    case .ternaryExpr: 
      return TernaryExprSyntax.self
    case .throwStmt: 
      return ThrowStmtSyntax.self
    case .tryExpr: 
      return TryExprSyntax.self
    case .tupleExprElementList: 
      return TupleExprElementListSyntax.self
    case .tupleExprElement: 
      return TupleExprElementSyntax.self
    case .tupleExpr: 
      return TupleExprSyntax.self
    case .tuplePatternElementList: 
      return TuplePatternElementListSyntax.self
    case .tuplePatternElement: 
      return TuplePatternElementSyntax.self
    case .tuplePattern: 
      return TuplePatternSyntax.self
    case .tupleTypeElementList: 
      return TupleTypeElementListSyntax.self
    case .tupleTypeElement: 
      return TupleTypeElementSyntax.self
    case .tupleType: 
      return TupleTypeSyntax.self
    case .typeAnnotation: 
      return TypeAnnotationSyntax.self
    case .typeExpr: 
      return TypeExprSyntax.self
    case .typeInheritanceClause: 
      return TypeInheritanceClauseSyntax.self
    case .typeInitializerClause: 
      return TypeInitializerClauseSyntax.self
    case .typealiasDecl: 
      return TypealiasDeclSyntax.self
    case .unavailableFromAsyncArguments: 
      return UnavailableFromAsyncArgumentsSyntax.self
    case .underscorePrivateAttributeArguments: 
      return UnderscorePrivateAttributeArgumentsSyntax.self
    case .unexpectedNodes: 
      return UnexpectedNodesSyntax.self
    case .unresolvedAsExpr: 
      return UnresolvedAsExprSyntax.self
    case .unresolvedIsExpr: 
      return UnresolvedIsExprSyntax.self
    case .unresolvedPatternExpr: 
      return UnresolvedPatternExprSyntax.self
    case .unresolvedTernaryExpr: 
      return UnresolvedTernaryExprSyntax.self
    case .valueBindingPattern: 
      return ValueBindingPatternSyntax.self
    case .variableDecl: 
      return VariableDeclSyntax.self
    case .versionTuple: 
      return VersionTupleSyntax.self
    case .whereClause: 
      return WhereClauseSyntax.self
    case .whileStmt: 
      return WhileStmtSyntax.self
    case .wildcardPattern: 
      return WildcardPatternSyntax.self
    case .yieldExprListElement: 
      return YieldExprListElementSyntax.self
    case .yieldExprList: 
      return YieldExprListSyntax.self
    case .yieldList: 
      return YieldListSyntax.self
    case .yieldStmt: 
      return YieldStmtSyntax.self
    }
  }
  
  public var nameForDiagnostics: String? {
    switch self {
    case .token: 
      return "token"
    case .accessPathComponent: 
      return nil
    case .accessPath: 
      return nil
    case .accessorBlock: 
      return nil
    case .accessorDecl: 
      return "accessor"
    case .accessorList: 
      return nil
    case .accessorParameter: 
      return nil
    case .actorDecl: 
      return "actor"
    case .arrayElementList: 
      return nil
    case .arrayElement: 
      return "array element"
    case .arrayExpr: 
      return "array"
    case .arrayType: 
      return "array type"
    case .arrowExpr: 
      return nil
    case .asExpr: 
      return "'as' expression"
    case .assignmentExpr: 
      return nil
    case .associatedtypeDecl: 
      return "associatedtype declaration"
    case .attributeList: 
      return "attributes"
    case .attribute: 
      return "attribute"
    case .attributedType: 
      return "type"
    case .availabilityArgument: 
      return "availability argument"
    case .availabilityCondition: 
      return "availability condition"
    case .availabilityEntry: 
      return "availability entry"
    case .availabilityLabeledArgument: 
      return "availability argument"
    case .availabilitySpecList: 
      return "'@availability' arguments"
    case .availabilityVersionRestrictionListEntry: 
      return "version"
    case .availabilityVersionRestrictionList: 
      return "version list"
    case .availabilityVersionRestriction: 
      return "version restriction"
    case .awaitExpr: 
      return "'await' expression"
    case .backDeployAttributeSpecList: 
      return "'@_backDeploy' arguments"
    case .binaryOperatorExpr: 
      return nil
    case .booleanLiteralExpr: 
      return "bool literal"
    case .borrowExpr: 
      return "'_borrow' expression"
    case .breakStmt: 
      return "'break' statement"
    case .caseItemList: 
      return nil
    case .caseItem: 
      return nil
    case .catchClauseList: 
      return "'catch' clause"
    case .catchClause: 
      return "'catch' clause"
    case .catchItemList: 
      return nil
    case .catchItem: 
      return nil
    case .classDecl: 
      return "class"
    case .classRestrictionType: 
      return nil
    case .closureCaptureItemList: 
      return nil
    case .closureCaptureItemSpecifier: 
      return "closure capture specifier"
    case .closureCaptureItem: 
      return "closure capture item"
    case .closureCaptureSignature: 
      return "closure capture signature"
    case .closureExpr: 
      return "closure"
    case .closureParamList: 
      return nil
    case .closureParam: 
      return "closure parameter"
    case .closureSignature: 
      return "closure signature"
    case .codeBlockItemList: 
      return nil
    case .codeBlockItem: 
      return nil
    case .codeBlock: 
      return "code block"
    case .compositionTypeElementList: 
      return nil
    case .compositionTypeElement: 
      return nil
    case .compositionType: 
      return "type composition"
    case .conditionElementList: 
      return nil
    case .conditionElement: 
      return nil
    case .conformanceRequirement: 
      return "conformance requirement"
    case .constrainedSugarType: 
      return "type"
    case .continueStmt: 
      return "'continue' statement"
    case .conventionAttributeArguments: 
      return "@convention(...) arguments"
    case .conventionWitnessMethodAttributeArguments: 
      return "@convention(...) arguments for witness methods"
    case .declModifierDetail: 
      return nil
    case .declModifier: 
      return "modifier"
    case .declNameArgumentList: 
      return nil
    case .declNameArgument: 
      return nil
    case .declNameArguments: 
      return nil
    case .declName: 
      return "declaration name"
    case .deferStmt: 
      return "'defer' statement"
    case .deinitializerDecl: 
      return "deinitializer"
    case .derivativeRegistrationAttributeArguments: 
      return "attribute arguments"
    case .designatedTypeElement: 
      return nil
    case .designatedTypeList: 
      return nil
    case .dictionaryElementList: 
      return nil
    case .dictionaryElement: 
      return "dictionary element"
    case .dictionaryExpr: 
      return "dictionary"
    case .dictionaryType: 
      return "dictionary type"
    case .differentiabilityParamList: 
      return "differentiability parameters"
    case .differentiabilityParam: 
      return "differentiability parameter"
    case .differentiabilityParamsClause: 
      return "'@differentiable' argument"
    case .differentiabilityParams: 
      return "differentiability parameters"
    case .differentiableAttributeArguments: 
      return "'@differentiable' arguments"
    case .discardAssignmentExpr: 
      return nil
    case .doStmt: 
      return "'do' statement"
    case .documentationAttributeArgument: 
      return "@_documentation argument"
    case .documentationAttributeArguments: 
      return "@_documentation arguments"
    case .dynamicReplacementArguments: 
      return "@_dynamicReplacement argument"
    case .editorPlaceholderDecl: 
      return "editor placeholder"
    case .editorPlaceholderExpr: 
      return "editor placeholder"
    case .effectsArguments: 
      return "@_effects arguments"
    case .enumCaseDecl: 
      return "enum case"
    case .enumCaseElementList: 
      return nil
    case .enumCaseElement: 
      return nil
    case .enumDecl: 
      return "enum"
    case .exposeAttributeArguments: 
      return "@_expose arguments"
    case .exprList: 
      return nil
    case .expressionPattern: 
      return "pattern"
    case .expressionSegment: 
      return nil
    case .extensionDecl: 
      return "extension"
    case .fallthroughStmt: 
      return "'fallthrough' statement"
    case .floatLiteralExpr: 
      return "floating literal"
    case .forInStmt: 
      return "'for' statement"
    case .forcedValueExpr: 
      return "force unwrap"
    case .functionCallExpr: 
      return "function call"
    case .functionDecl: 
      return "function"
    case .functionParameterList: 
      return "parameter list"
    case .functionParameter: 
      return "parameter"
    case .functionSignature: 
      return "function signature"
    case .functionType: 
      return "function type"
    case .genericArgumentClause: 
      return "generic argument clause"
    case .genericArgumentList: 
      return nil
    case .genericArgument: 
      return "generic argument"
    case .genericParameterClause: 
      return "generic parameter clause"
    case .genericParameterList: 
      return nil
    case .genericParameter: 
      return "generic parameter"
    case .genericRequirementList: 
      return nil
    case .genericRequirement: 
      return nil
    case .genericWhereClause: 
      return "'where' clause"
    case .guardStmt: 
      return "'guard' statement"
    case .hasSymbolCondition: 
      return "'#_hasSymbol' condition"
    case .identifierExpr: 
      return nil
    case .identifierPattern: 
      return "pattern"
    case .ifConfigClauseList: 
      return nil
    case .ifConfigClause: 
      return "conditional compilation clause"
    case .ifConfigDecl: 
      return "conditional compilation block"
    case .ifStmt: 
      return "'if' statement"
    case .implementsAttributeArguments: 
      return "@_implements arguemnts"
    case .implicitlyUnwrappedOptionalType: 
      return "implicitly unwrapped optional type"
    case .importDecl: 
      return "import"
    case .inOutExpr: 
      return "inout expression"
    case .infixOperatorExpr: 
      return nil
    case .inheritedTypeList: 
      return nil
    case .inheritedType: 
      return "inherited type"
    case .initializerClause: 
      return nil
    case .initializerDecl: 
      return "initializer"
    case .integerLiteralExpr: 
      return "integer literal"
    case .isExpr: 
      return "'is' expression"
    case .isTypePattern: 
      return "'is' pattern"
    case .keyPathComponentList: 
      return nil
    case .keyPathComponent: 
      return "key path component"
    case .keyPathExpr: 
      return "key path"
    case .keyPathOptionalComponent: 
      return "key path optional component"
    case .keyPathPropertyComponent: 
      return "key path property component"
    case .keyPathSubscriptComponent: 
      return "key path subscript component"
    case .labeledSpecializeEntry: 
      return "attribute argument"
    case .labeledStmt: 
      return "labeled statement"
    case .layoutRequirement: 
      return "layout requirement"
    case .macroDecl: 
      return "macro"
    case .macroExpansionDecl: 
      return "pound literal declaration"
    case .macroExpansionExpr: 
      return "pound literal expression"
    case .matchingPatternCondition: 
      return "pattern matching"
    case .memberAccessExpr: 
      return "member access"
    case .memberDeclBlock: 
      return "member block"
    case .memberDeclListItem: 
      return nil
    case .memberDeclList: 
      return nil
    case .memberTypeIdentifier: 
      return "member type"
    case .metatypeType: 
      return "metatype"
    case .missingDecl: 
      return "declaration"
    case .missingExpr: 
      return "expression"
    case .missingPattern: 
      return "pattern"
    case .missingStmt: 
      return "statement"
    case .missing: 
      return nil
    case .missingType: 
      return "type"
    case .modifierList: 
      return nil
    case .moveExpr: 
      return "'_move' expression"
    case .multipleTrailingClosureElementList: 
      return nil
    case .multipleTrailingClosureElement: 
      return "trailing closure"
    case .namedOpaqueReturnType: 
      return "named opaque return type"
    case .nilLiteralExpr: 
      return nil
    case .objCSelectorPiece: 
      return "Objective-C selector piece"
    case .objCSelector: 
      return "Objective-C selector"
    case .opaqueReturnTypeOfAttributeArguments: 
      return "opaque return type arguments"
    case .operatorDecl: 
      return "operator declaration"
    case .operatorPrecedenceAndTypes: 
      return nil
    case .optionalBindingCondition: 
      return "optional binding"
    case .optionalChainingExpr: 
      return "optional chaining"
    case .optionalType: 
      return "optional type"
    case .originallyDefinedInArguments: 
      return "@_originallyDefinedIn arguments"
    case .packElementExpr: 
      return nil
    case .packExpansionExpr: 
      return nil
    case .packExpansionType: 
      return "variadic expansion"
    case .packReferenceType: 
      return "pack reference"
    case .parameterClause: 
      return "parameter clause"
    case .patternBindingList: 
      return nil
    case .patternBinding: 
      return nil
    case .postfixIfConfigExpr: 
      return nil
    case .postfixUnaryExpr: 
      return "postfix expression"
    case .poundAssertStmt: 
      return "'#assert' directive"
    case .poundErrorDecl: 
      return "'#error' directive"
    case .poundSourceLocationArgs: 
      return "'#sourceLocation' arguments"
    case .poundSourceLocation: 
      return "'#sourceLocation' directive"
    case .poundWarningDecl: 
      return "'#warning' directive"
    case .precedenceGroupAssignment: 
      return "'assignment' property of precedencegroup"
    case .precedenceGroupAssociativity: 
      return "'associativity' property of precedencegroup"
    case .precedenceGroupAttributeList: 
      return nil
    case .precedenceGroupDecl: 
      return "precedencegroup"
    case .precedenceGroupNameElement: 
      return nil
    case .precedenceGroupNameList: 
      return nil
    case .precedenceGroupRelation: 
      return "'relation' property of precedencegroup"
    case .prefixOperatorExpr: 
      return "prefix operator expression"
    case .primaryAssociatedTypeClause: 
      return "primary associated type clause"
    case .primaryAssociatedTypeList: 
      return nil
    case .primaryAssociatedType: 
      return nil
    case .protocolDecl: 
      return "protocol"
    case .qualifiedDeclName: 
      return "declaration name"
    case .regexLiteralExpr: 
      return "regex literal"
    case .repeatWhileStmt: 
      return "'repeat' statement"
    case .returnClause: 
      return nil
    case .returnStmt: 
      return "'return' statement"
    case .sameTypeRequirement: 
      return "same type requirement"
    case .sequenceExpr: 
      return nil
    case .simpleTypeIdentifier: 
      return "type"
    case .sourceFile: 
      return "source file"
    case .specializeAttributeSpecList: 
      return "argument to '@_specialize"
    case .specializeExpr: 
      return nil
    case .stringLiteralExpr: 
      return "string literal"
    case .stringLiteralSegments: 
      return nil
    case .stringSegment: 
      return nil
    case .structDecl: 
      return "struct"
    case .subscriptDecl: 
      return "subscript"
    case .subscriptExpr: 
      return "subscript"
    case .superRefExpr: 
      return nil
    case .switchCaseLabel: 
      return nil
    case .switchCaseList: 
      return nil
    case .switchCase: 
      return "switch case"
    case .switchDefaultLabel: 
      return nil
    case .switchStmt: 
      return "'switch' statement"
    case .targetFunctionEntry: 
      return "attribute argument"
    case .ternaryExpr: 
      return "ternay expression"
    case .throwStmt: 
      return "'throw' statement"
    case .tryExpr: 
      return "'try' expression"
    case .tupleExprElementList: 
      return nil
    case .tupleExprElement: 
      return nil
    case .tupleExpr: 
      return "tuple"
    case .tuplePatternElementList: 
      return nil
    case .tuplePatternElement: 
      return nil
    case .tuplePattern: 
      return "tuple pattern"
    case .tupleTypeElementList: 
      return nil
    case .tupleTypeElement: 
      return nil
    case .tupleType: 
      return "tuple type"
    case .typeAnnotation: 
      return "type annotation"
    case .typeExpr: 
      return nil
    case .typeInheritanceClause: 
      return "inheritance clause"
    case .typeInitializerClause: 
      return nil
    case .typealiasDecl: 
      return "typealias declaration"
    case .unavailableFromAsyncArguments: 
      return "@_unavailableFromAsync argument"
    case .underscorePrivateAttributeArguments: 
      return "@_private argument"
    case .unexpectedNodes: 
      return nil
    case .unresolvedAsExpr: 
      return nil
    case .unresolvedIsExpr: 
      return nil
    case .unresolvedPatternExpr: 
      return nil
    case .unresolvedTernaryExpr: 
      return nil
    case .valueBindingPattern: 
      return "value binding pattern"
    case .variableDecl: 
      return "variable"
    case .versionTuple: 
      return "version tuple"
    case .whereClause: 
      return "'where' clause"
    case .whileStmt: 
      return "'while' statement"
    case .wildcardPattern: 
      return "wildcard pattern"
    case .yieldExprListElement: 
      return nil
    case .yieldExprList: 
      return "yield list"
    case .yieldList: 
      return nil
    case .yieldStmt: 
      return "'yield' statement"
    }
  }
}
